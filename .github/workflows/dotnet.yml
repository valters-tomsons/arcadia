name: .NET

on:
  push:
    branches: [ "*" ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux-x64, linux-arm64, win-x64]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and Publish
      run: dotnet publish ./src/server -c Release -r ${{ matrix.os }} -o ./release-${{ matrix.os }}

    - name: Upload Release
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: ./release-${{ matrix.os }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-arm64
          path: ./release-linux-arm64

      - name: Write SSH credentials
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          host='${{ secrets.SSH_HOST }}'
          hosts="$(dig +short "$host" | grep -v '\.$' | sed -z 's|\n|,|g')$host"
          ssh-keyscan -H "$hosts" > ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          chmod +x ./release-linux-arm64/Arcadia

          scp -i ~/.ssh/id_rsa ./release-linux-arm64/Arcadia ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/server/
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            tmux new-session -d -s arcadia_server 'cd /home/${{ secrets.SSH_USER }}/server && ./Arcadia'
          EOF
        shell: bash